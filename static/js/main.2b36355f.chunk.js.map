{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pages","Math","ceil","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","number","active","concat","length","itemsFromServer","App","pageInfo","setPageInfo","useState","page","itemsPerPage","itemsToDisplay","setItemsToDisplay","useEffect","getVisibleItems","items","slice","id","onChange","event","Number","target","value","defaultValue","htmlFor","pageNum","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b36355f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange(page: number): void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn({\n          'page-item': true,\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(number => (\n        <li\n          className={cn({\n            'page-item': true,\n            active: currentPage === number,\n          })}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn({\n          'page-item': true,\n          disabled: currentPage === pages.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst itemsFromServer = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const getVisibleItems = (\n    items: string[],\n    page: number,\n    itemsPerPage: number,\n  ): string[] => items.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n\n  const [pageInfo, setPageInfo] = useState({\n    page: 1,\n    itemsPerPage: 5,\n  });\n  const [itemsToDisplay, setItemsToDisplay] = useState(itemsFromServer);\n\n  useEffect(() => {\n    setItemsToDisplay(\n      getVisibleItems(itemsFromServer, pageInfo.page, pageInfo.itemsPerPage),\n    );\n  }, [pageInfo]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageInfo.page} (items ${(pageInfo.page - 1) * pageInfo.itemsPerPage + 1} - ${pageInfo.page * pageInfo.itemsPerPage < itemsFromServer.length ? pageInfo.page * pageInfo.itemsPerPage : itemsFromServer.length} of ${itemsFromServer.length})`}\n      </p>\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={event =>\n              setPageInfo({\n                page: 1,\n                itemsPerPage: Number(event.target.value),\n              })\n            }\n            defaultValue=\"5\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={itemsFromServer.length}\n        perPage={pageInfo.itemsPerPage}\n        currentPage={pageInfo.page}\n        onPageChange={(pageNum: number) =>\n          setPageInfo({ ...pageInfo, page: pageNum })\n        }\n      />\n      <ul>\n        {itemsToDisplay.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}